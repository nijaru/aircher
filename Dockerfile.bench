# Aircher Benchmark Runner
# Containerized environment for running Terminal-Bench and SWE-bench

# Stage 1: Build Aircher
FROM rust:1.70-slim as builder

WORKDIR /build
COPY . .

# Build release binary with all features
RUN cargo build --release --bin aircher

# Stage 2: Runtime environment with benchmarking tools
FROM ubuntu:22.04

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # Core tools
    git \
    curl \
    ca-certificates \
    build-essential \
    # Node.js for Terminal-Bench
    nodejs \
    npm \
    # Python for SWE-bench (optional)
    python3 \
    python3-pip \
    # Language servers (for LSP integration)
    && rm -rf /var/lib/apt/lists/*

# Install Terminal-Bench
WORKDIR /tbench
RUN npm install -g @terminal-bench/cli || echo "Terminal-Bench install failed (package may not exist yet)"

# Copy Aircher binary from builder
COPY --from=builder /build/target/release/aircher /usr/local/bin/aircher
RUN chmod +x /usr/local/bin/aircher

# Verify Aircher works
RUN aircher --version || echo "Aircher binary copied"

# Create workspace for test runs
RUN mkdir -p /workspace /results
WORKDIR /workspace

# Set environment variables
ENV RUST_LOG=info
ENV RUST_BACKTRACE=1

# Default command: run Aircher in ACP mode (waiting for benchmark harness)
CMD ["aircher", "--acp"]

# Usage examples:
# Build: docker build -t aircher-bench:latest -f Dockerfile.bench .
# Run minimal test: docker run --rm -v $(pwd)/results:/results aircher-bench:latest tbench run --agent aircher --tasks 10
# Run full benchmark: docker run --rm -v $(pwd)/results:/results aircher-bench:latest tbench run --agent aircher --dataset core-v0
# Interactive: docker run --rm -it aircher-bench:latest bash
